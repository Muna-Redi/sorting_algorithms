#include "sort.h"

/**
* cocktail_sort - This sorts a doubly linked list of integers in
* an ascending
* order using cocktail sort
* @list: linked list to be sorted
* @size: size of the array
* Return: void
*/
void cocktail_sort_list(listint_t **list)
{
	listint_t *beg, *sta, *tmp;
	int swap;

	if (*list == NULL)
		return;

	beg = *list;
	swap = 1;

	while (swap == 1)
	{
		swap = 0;
		sta = beg;

		while (sta->next)
		{
			if (sta->n > sta->next->n)
			{
				tmp = sta->next;
				sta->next = tmp->next;
				if (sta->next != NULL)
					sta->next->prev = sta;
				tmp->next = sta;
				tmp->prev = sta->prev;

				if (sta->prev != NULL)
				{
					sta->prev->next = tmp;
					sta->prev = tmp;
				}
				swap = 1;
			}
			print_list(*list);
			sta = sta->next;
		}

		while (sta->prev)
		{
			if (sta->n < sta->prev->n)
			{
				tmp = sta->prev;
				sta->prev = tmp->prev;
				if (sta->prev != NULL)
					sta->prev->next = sta;
				else if (sta->prev == NULL)
					*list = sta;
				tmp->prev = sta;
				tmp->next = sta->next;

				if (sta->next != NULL)
				{
					sta->next->prev = tmp;
					sta->next = tmp;
				}
				swap = 1;
			}
			print_list(*list);
			sta = sta->prev;
		}
		beg = sta;
	}
}
